# this configuration needs to correspond to the Vue.js frontends' vue.config.js devServer.proxy.target configuration!
# otherwise you may experience errors like: Proxy error: Could not proxy request /api/hello from localhost:8080 to http://localhost:8098... (ECONNREFUSED).
server.port=8098
spring.security.user.name=sina
spring.security.user.password=miller


spring.datasource.initialization-mode=always
spring.datasource.platform=cop
spring.datasource.url=jdbc:postgresql://db:5432/cop?currentSchema=cop
spring.datasource.username=postgres
spring.datasource.password=a454545!
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
spring.jpa.hibernate.use-new-id-generator-mappings= false
spring.jpa.properties.hibernate.id.new_generator_mappings=false

spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=61000
spring.datasource.hikari.pool-name=SpringBootJPAHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



spring.jpa.database=postgresql
# Show or not log for each sql query
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true